
obj.clientHeight
padding+内容高度，即使是box-sizing也不算border
当obj是根节点时obj.clientHeight为页面可视区域高度，一般根节点都是html即document.documentElement。
根节点无论有没有border、padding，obj.clientHeight都是可视区域高度。
获取页面可视区域高度：document.documentElement.clientHeight || document.body.clientHeight

obj.clientWidth
padding+内容宽度
获取页面可视区域宽度：document.documentElement.clientWidth || document.body.clientWidth
注：body有border，宽度被撑开后就不和页面可视区域宽度相等了，可视区域宽度是，根节点的clientWidth


obj.offsetHeight
border+padding+内容高度
document.body.offsetHeight即：body的border+padding+内容高度
document.documentElement.offsetHeight即：html的border+padding+内容高度，即页面高度

obj.offsetWidth
border+padding+内容宽度


obj.scrollHeight
padding+内容高度
document.body.scrollHeight即：body的padding+内容高度
document.documentElement.scrollHeight即：html的border+padding+内容高度（因为html是根节点获取的也是整体高度）

obj.scrollWidth
padding+内容高度


obj.scrollTop
节点距离顶部的滚动距离
注：需要overflow-y为auto/scroll，并且具有滚动距离。否则为0
页面滚动高度：window.scrollTop，document.documentElement.scrollTop也是页面滚动高度，因为html是根节点。

obj.scrollLeft
节点距离左边的滚动距离
注：需要overflow-y为auto/scroll，并且具有滚动距离。否则为0

window.screenTop
浏览器距离显示器顶部的距离，可以为负
window.screenLeft
浏览器距离显示器左边的距离

window.screen.height
浏览器显示器高度
window.screen.width
浏览器显示器宽度

window.screen.availHeight
显示屏可工作区高度，减去任务栏
window.screen.availWidth
显示屏可工作区宽度，减去任务栏





